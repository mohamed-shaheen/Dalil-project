"""
Django settings for project project.

Generated by 'django-admin startproject' using Django 3.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv
load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = str(os.getenv('SECRET_KEY'))

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.gis',
    'leaflet',
    'accounts',
    'django_email_verification',
    'widget_tweaks',
    'address',
    'contact',
    'avatar',
    'el_pagination',
    'django_summernote',
    'import_export',
    'unidecode',

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'project.urls'
LOCALE_PATHS = [os.path.join(BASE_DIR, 'locale')]

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.i18n',
                'django.template.context_processors.request', ## For EL-pagination
            ],
        },
    },
]

WSGI_APPLICATION = 'project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.contrib.gis.db.backends.postgis',
        'NAME': 'postgis_django',
        'USER': str(os.getenv('db_user_name')),
        'PASSWORD': str(os.getenv('db_pass')),
        'HOST': 'localhost',
        'PORT': '5432'
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

from django.utils.translation import gettext_lazy as _

LANGUAGE_CODE = 'ar'

LANGUAGES = [
  ('ar', _('Arabic')),
  ('en', _('English')),
]


TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'
#STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATICFILES_DIRS=[
    os.path.join(BASE_DIR, 'static'),
]


MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


LOGOUT_REDIRECT_URL = 'address:home'
LOGIN_REDIRECT_URL = 'address:home'
LOGIN_URL='accounts:login'



LEAFLET_CONFIG = {
    # conf here
    'DEFAULT_CENTER': (30.033333, 31.233334),
    'DEFAULT_ZOOM': 7,
    'MIN_ZOOM': 2,
    'MAX_ZOOM': 18,
    'DEFAULT_PRECISION': 6,
    'ATTRIBUTION_PREFIX': 'Dalil',
    #'SRID': 4326,
    #'MINIMAP': True,
    #'TILES': [],
    'PLUGINS': {
        'forms': {
            'css': [ '/static/leaflet-gps-master/src/leaflet-gps.css'],
            'js': [ '/static/leaflet-gps-master/src/leaflet-gps.js'],
            'auto-include': True,
        },
    }
}


# email verified settings
def verified_callback(user):
    user.is_active = True


EMAIL_VERIFIED_CALLBACK = verified_callback
EMAIL_FROM_ADDRESS = 'Dalil team noreply<no_reply@domain.com>'
EMAIL_MAIL_SUBJECT = 'Verify your email for Dalil'
EMAIL_MAIL_HTML = 'email-confirm/mail_body.html'
EMAIL_MAIL_PLAIN = 'email-confirm/mail_body.txt'
EMAIL_TOKEN_LIFE = 60 * 60 * 24
EMAIL_PAGE_TEMPLATE = 'email-confirm/confirm_template.html'
EMAIL_PAGE_DOMAIN = 'http://127.0.0.1:8000/'

# For Django Email Backend
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'mail.privateemail.com'
EMAIL_PORT = 587
EMAIL_HOST_USER = str(os.getenv('email'))
EMAIL_HOST_PASSWORD = str(os.getenv('mail_key'))
EMAIL_USE_SSL = False
EMAIL_USE_TLS = True
DEFAULT_FROM_EMAIL = 'Dalil noreply<no_reply@dalil-eg.com>'

# Avatar settings
AVATAR_AUTO_GENERATE_SIZES = (80, 100, 65, 120)
AVATAR_DEFAULT_URL =  'static/img/ninja_avatar.png'
AVATAR_MAX_AVATARS_PER_USER = 3
AVATAR_GRAVATAR_DEFAULT = 'https://cdn1.iconfinder.com/data/icons/ninja-things-1/1772/ninja-512.png'
AVATAR_CLEANUP_DELETED = True
AVATAR_ADD_TEMPLATE = 'avatarapp/add.html'
AVATAR_CHANGE_TEMPLATE = 'avatarapp/change.html'
AVATAR_DELETE_TEMPLATE = 'avatarapp/confirm_delete.html'


#ENDLESS_PAGINATION
EL_PAGINATION_PAGE_OUT_OF_RANGE_404 = True


#---SUMMERNOTE---
X_FRAME_OPTIONS = 'SAMEORIGIN'
SUMMERNOTE_THEME = 'bs4'
SUMMERNOTE_CONFIG = {

    # You can put custom Summernote settings
    'summernote': {
        # As an example, using Summernote Air-mode
        'airMode': False,

        # Change editor size
        'width': '100%',
        'height': '400',

        # Toolbar customization
        # https://summernote.org/deep-dive/#custom-toolbar-popover
        'toolbar': [
            ['style', ['style']],
            ['font', ['bold', 'underline', 'clear']],
            ['fontname', ['fontname']],
            ['color', ['color']],
            ['para', ['ul', 'ol', 'paragraph']],
            ['table', ['table']],
            ['insert', ['link', 'picture', 'video']],
            ['view', ['fullscreen', 'codeview', 'help']],
        ],

        # Or, explicitly set language/locale for editor
        #'lang': 'ko-KR',
    }    


}
ALLOW_UNICODE_SLUGS = True